{"version":3,"sources":["src/js/statemachine_designer.js","src/js/statemachine_designer/node.js"],"names":[],"mappings":"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","file":"dist/js/statemachine_designer.js","sourcesContent":["class StatemachineDesigner extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { nodes: [], transitions: [] };\n\n    // test\n    this.state.nodes = [\n      { x: 100, y: 100, name: \"New\" },\n      { x: 200, y: 100, name: \"Detected\" }\n    ];\n  }\n\n  render() {\n    var nodes = null;\n    var transitions = null;\n\n    nodes = this.state.nodes.map(function(node, index) {\n      return (\n        <StatemachineDesigner.Node\n          key={`node-${index}`}\n          name={node.name}\n          x={node.x}\n          y={node.y}\n        />\n      );\n    });\n\n    return (\n      <div className=\"smd-canvas\">\n        {transitions}\n        {nodes}\n      </div>\n    );\n  }\n}\n","StatemachineDesigner.Node = class extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name:       props.name,\n      x:          props.x,\n      y:          props.y,\n      dragging:   false,\n      editing:    false\n    };\n\n    // messy js scope bindings\n    this.handleMouseUp = this.handleMouseUp.bind(this);\n    this.handleMouseMove = this.handleMouseMove.bind(this);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"mouseup\", this.handleMouseUp);\n    document.removeEventListener(\"mousemove\", this.handleMouseMove);\n  }\n\n  handleMouseDown(event) {\n    if(!this.state.editing && !this.state.dragging) {\n      // keep the offset of the mousedrag start\n      this.dragStartX = event.pageX;\n      this.dragStartY = event.pageY;\n      this.nodeStartX = this.state.x;\n      this.nodeStartY = this.state.y;\n\n      this.addDragEventListeners();\n      this.setState({ dragging: true });\n    }\n  }\n\n  handleMouseMove(event) {\n    if(this.state.editing || !this.state.dragging) return;\n\n    var diffX = event.pageX - this.dragStartX;\n    var diffY = event.pageY - this.dragStartY;\n\n    this.setState({\n      x: this.nodeStartX + diffX,\n      y: this.nodeStartY + diffY\n    });\n  }\n\n  handleDoubleClick(event) {\n    this.setState({ editing: true });\n  }\n\n  handleMouseUp(event) {\n    if(!this.state.editing && this.state.dragging) {\n      this.removeDragEventListeners();\n      this.setState({ dragging: false });\n    }\n  }\n\n  handleChange(event) {\n    this.setState({ name: event.target.value });\n  }\n\n  addDragEventListeners() {\n    document.addEventListener(\"mousemove\", this.handleMouseMove, false);\n    document.addEventListener(\"mouseup\", this.handleMouseUp, false);\n  }\n\n  removeDragEventListeners() {\n    document.removeEventListener(\"mousemove\", this.handleMouseMove, false);\n    document.removeEventListener(\"mouseup\", this.handleMouseUp);\n  }\n\n  getClassName() {\n    var className = \"smd-node\";\n\n    if(this.state.dragging)\n      className += \" smd-node--dragging\";\n\n    if(this.state.editing)\n      className += \" smd-node--editing\";\n\n    return className;\n  }\n\n  getStyle() {\n    return { left: this.state.x, top: this.state.y };\n  }\n\n  getLabel() {\n    if(this.state.editing) {\n      return (\n        <input\n          type=\"text\"\n          value={this.state.name}\n          onChange={this.handleChange.bind(this)}\n          className=\"smd-node-input\"\n        />\n      );\n\n    } else {\n      return (\n        <span>{this.state.name}</span>\n      );\n\n    }\n  }\n\n  render() {\n    return (\n      <div\n        ref=\"node\"\n        className={this.getClassName()}\n        style={this.getStyle()}\n        onDoubleClick={this.handleDoubleClick.bind(this)}\n        onMouseDown={this.handleMouseDown.bind(this)}>\n\n        {this.getLabel()}\n\n      </div>\n    );\n  }\n}\n"]}