{"version":3,"sources":["src/js/statemachine_designer.js","src/js/statemachine_designer/node.js","src/js/statemachine_designer/transition.js"],"names":[],"mappings":"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","file":"dist/js/statemachine_designer.js","sourcesContent":["class StatemachineDesigner extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { nodes: [], transitions: [] };\n\n    // test\n    this.state.nodes = [\n      { x: 100, y: 100, name: \"New\" },\n      { x: 200, y: 100, name: \"Detected\" }\n    ];\n\n    this.state.transitions = [\n      { nodeFrom: 0, nodeTo: 1 },\n      { nodeTo: 1, nodeFrom: 0 }\n    ];\n  }\n\n  handleNodeChange(nodeIndex, x, y) {\n    var nodes = this.state.nodes;\n\n    nodes[nodeIndex].x = x;\n    nodes[nodeIndex].y = y;\n\n    this.setState({ nodes: nodes });\n  }\n\n  render() {\n    var nodes;\n    var transitions;\n\n    nodes = this.state.nodes.map((node, index) => {\n      return (\n        <StatemachineDesigner.Node\n          key={`node-${index}`}\n          node={node}\n          onNodeChange={this.handleNodeChange.bind(this, index)} />\n      );\n    });\n\n    transitions = this.state.transitions.map((transition, index) => {\n      return (\n        <StatemachineDesigner.Transition\n          key={`transition-${index}`}\n          nodeFrom={this.state.nodes[transition.nodeFrom]}\n          nodeTo={this.state.nodes[transition.nodeTo]} />\n      );\n    });\n\n    return (\n      <svg className=\"smd-canvas\" width={640} height={480}>\n        {transitions}\n        {nodes}\n      </svg>\n    );\n  }\n}\n","StatemachineDesigner.Node = class extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      width: 75,\n      height: 25,\n      node: props.node\n    }\n\n    // messy js scope bindings\n    this.handleMouseUp = this.handleMouseUp.bind(this);\n    this.handleMouseMove = this.handleMouseMove.bind(this);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"mouseup\", this.handleMouseUp);\n    document.removeEventListener(\"mousemove\", this.handleMouseMove);\n  }\n\n  handleMouseDown(event) {\n    if(!this.state.editing && !this.state.dragging) {\n      // keep the offset of the mousedrag start\n      this.dragStartX = event.pageX;\n      this.dragStartY = event.pageY;\n      this.nodeStartX = this.state.node.x;\n      this.nodeStartY = this.state.node.y;\n\n      this.addDragEventListeners();\n      this.setState({ dragging: true });\n    }\n  }\n\n  handleMouseMove(event) {\n    if(this.state.editing || !this.state.dragging) return;\n\n    var diffX = event.pageX - this.dragStartX;\n    var diffY = event.pageY - this.dragStartY;\n\n    this.props.onNodeChange(this.nodeStartX + diffX, this.nodeStartY + diffY);\n  }\n\n  handleDoubleClick(event) {\n    this.setState({ editing: true });\n  }\n\n  handleMouseUp(event) {\n    if(!this.state.editing && this.state.dragging) {\n      this.removeDragEventListeners();\n      this.setState({ dragging: false });\n    }\n  }\n\n  handleChange(event) {\n    this.setState({ name: event.target.value });\n  }\n\n  addDragEventListeners() {\n    document.addEventListener(\"mousemove\", this.handleMouseMove, false);\n    document.addEventListener(\"mouseup\", this.handleMouseUp, false);\n  }\n\n  removeDragEventListeners() {\n    document.removeEventListener(\"mousemove\", this.handleMouseMove, false);\n    document.removeEventListener(\"mouseup\", this.handleMouseUp);\n  }\n\n  getClassName() {\n    var className = \"smd-node\";\n\n    if(this.state.dragging)\n      className += \" smd-node--dragging\";\n\n    if(this.state.editing)\n      className += \" smd-node--editing\";\n\n    return className;\n  }\n\n  render() {\n    return (\n      <svg\n        x={this.state.node.x}\n        y={this.state.node.y}\n        className={this.getClassName()}\n        onDoubleClick={this.handleDoubleClick.bind(this)}\n        onMouseDown={this.handleMouseDown.bind(this)}>\n\n        <rect\n          x={0.5}\n          y={0.5}\n          rx={5}\n          ry={5}\n          width={this.state.width}\n          height={this.state.height}\n          fill={this.state.dragging ? \"black\" : \"white\"}\n          stroke=\"black\"\n          strokeWidth=\"1\" />\n\n        <text\n          x={this.state.width / 2}\n          y={this.state.height / 2}\n          fontSize={12}\n          alignmentBaseline=\"middle\"\n          fill={this.state.dragging ? \"white\" : \"black\"}\n          textAnchor=\"middle\">\n          {this.state.node.name}\n        </text>\n\n      </svg>\n    );\n  }\n}\n","StatemachineDesigner.Transition = class extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div />\n    );\n  }\n}\n"]}